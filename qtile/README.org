* My Qtile config

#+caption: What it looks like currently (windows are: Emacs, Emacs and Kitty)
[[./assets/screenshot.png]]

This configuration for the Qtile window manager (X11 version, not Wayland yet) attempts to create a nice notebook-like/paper-like experience with a heavy emphasis on a light theme and horizontal organization.
Features of note include:
- A custom scrolling layout, inspired by Niri
- Custom widgets for a vertical bar (now part of core Qtile)
- Sidebar popups for each widget (similar to some popular EWW, AGS and Quickshell configs)
- +Autostart script+ (soon to be abandoned)
- A heavy focus on Object-Oriented Programming principles

** Directory structure

- =aesthetics/= :: Contains classes for appearance and theming. Colours, Fonts and Wallpaper are defined here.
- =layouts/= :: Contains the custom scrolling layout that I have implemented. Also defines all layouts that the config uses. The scrolling layout functions more-or-less like [[https://github.com/YaLTeR/niri][Niri]] or [[https://github.com/paperwm/PaperWM][PaperWM]] (to my knowledge)
- =popups/= :: Contains all the popup layouts (made using [[https://github.com/elParaguayo/qtile-extras][qtile_extras]]' popup toolkit) including the sidebars. These popups are used by custom widgets for now, but I intend to make this more general.
- =widgets/= :: Contains custom widgets that may or may not use popups. Also defines the list of widgets in the bars.
- =utils/= :: Contains some helper functions and images that I couldn't be bothered to classify.
- =scripts/= :: Contains the autostart script (soon to be abandoned).
- =wacky_ideas/= :: Contains a bunch of things I am trying out as Proof-of-Concepts that I don't think are usable on a regular basis. I hope to eventually move modules from here to their own stable folders.
- =config.py= :: The *main* config file, which imports everything else from other files. This is the file that Qtile starts reading from.
- =bindings.py= :: Defines keybindings of all kinds. I've attempted to make this decently readable, but there's still some ways to go.
- =groups.py= :: Defines groups and scratchpads.
- =hooks.py= :: Defines all functions that are attached to hooks (currently only one, but I expect to add more down the line).
- =screens.py= :: Defines all possible screen layouts and bars. The current bar location and screen layout can be chosen as a method of these classes.
- =wayland.py= :: (Experimental) Intended for me to learn how to use QTile on Wayland. Not imported at the moment.

** Dependencies

A great deal of features (including most importantly the popups) use ~qtile_extras~ which will have to be installed from your package manager of choice (~pacman~ or ~pip~ or others).

There's a series of Python libraries that I'm using that aren't bundled as dependencies of Qtile. I'll eventually add a list of these libraries in the README, or add a separate =uv.lock= file that should do this for me.
